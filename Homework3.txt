# 1

# Создаем основной кортеж
A = tuple (input("Введите текст"))
print("Первый кортеж", A)
# Создаем переменую определяющую шаг вывода элемента из основного кортежа
n = int(input("Введите число"))
# Создаем новый кортеж на основе основнова кортежа с шагоь n
B = tuple(A[k] for k in range(len(A)) if k%n == 0)
print("Кортеж с шагом", n, ":", B)

# 2

# Создаем основной кортеж
A = tuple (input("Введите число"))
print("Первый кортеж:", A)
# Создаем обратный кортеж основного кортежа 
B = A[::-1]
print ("Кортеж в обратном порядке", B)

# 4

n = int(input("Размерность матрицы: "))
 
b = [[0]*n for i in range(n)]

st, m = 1, 0
# Заранее присваиваю значение центральному элементу
# матрицы
b[n//2][n//2]=n*n
for v in range(n//2):
    #Заполнение верхней горизонтальной матрицы
    for i in range(n-m):
        b[v][i+v] = st
        st+=1
    
    #Заполнение правой вертикальной матрицы    
    for i in range(v+1, n-v):
        b[i][-v-1] = st
        st+=1
        
    #Заполнение нижней горизонтальной матрицы
    for i in range(v+1, n-v):
        b[-v-1][-i-1] =st
        st+=1
        
    #Заполнение левой вертикальной матрицы
    for i in range(v+1, n-(v+1)):
        b[-i-1][v]=st
        st+=1
    m+=2
    
for el in b:
    print(el)

# 7

# Создаем функцию для создания списка из двух значений (наибольшее значение списка и его индекс) в n-ом списки. 
def list (A):
    B1 = max(A)
    B2= A.index(max(A))
    B = [B1, B2]
    return B
    
# Создаем список     
A = eval(input("Введите числа через зяпяту"))
# Выводим наибольшее значение списка и его индек
print (A, "Наибольшее значение списка и его индекс:", list (A))
# Создаем список   
C = [2,58,547,48,56,89,58,47,47]
# Выводим наибольшее значение списка и его индек
print(C, "Наибольшее значение списка и его индекс:", list(C))

# 8

# Подключение функции для генерирования случайных чисел
from random import*
# Создание списка из случайных чисел
A = [randint(1, 100) for k in range(10)]
print(A)
# Элементы выбираются через один начиная с нулевого индекса
A1 = A[::2]
print(A1)
# Сортировка списка по возростанию (Создается новый список) A2.sort - для сортировки существующего списка 
A12 = sorted(A1)
print(A12)
# Элементы выбираются через один начиная с первого индекса
A2 = A[1::2]
print(A2)
# Сортировка списка по убыванию (Создается новый список) A2.sort(reverse=True) - для сортировки существующего списка 
A22 = sorted(A2, reverse=True)
print(A22)

# 9

# Подключение функции для генерирования случайных чисел
from random import*
# Создание списка из случайных чисел
A = [randint(1, 100) for k in range(10)]
print(A)
# Создается пустой список
D = []
# Создается цикл для добовления числа в списак между изначальными индексами (число добовляется путем сложения двух соседних индексов)
for k in range(len(A)-1):
    B = A[k]+A[k+1]
    C = [A[k], B]
    D=D+C
# Добавление последнего индекса списка
D1 = D + [A[-1]]
# Выводится конечный список 
print(D1)

# 10

A = [1, 2, 3, 4, 5]
B = ['A:', 'B:', 'C:', 'D:', 'E:']
print(A)
print(B)
D =[]
# Проверяем на равенства элементов в списках 
if len(A)==len(B):
# создаем цикал для поочеродного заполнения нового списка двумя другими списками 
    for k in range (len(A)):
        C = [B[k], A[k]]
        D = D + C
# Вводим предупреждения при случаи различного количества элементов в цикле 
else: 
    print("Количество индексов в списках А и В не равны друг другу")

print(D)